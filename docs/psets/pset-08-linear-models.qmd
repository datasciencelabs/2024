---
title: Problem set 7 
date: 2024-11-15
execute: 
  eval: false
---

1. Load the **HistData** package. Create a `galton_height` data with the father's height and one randomly selected daughter from each family. Exclude families with no female children. Set the seed at 2007 and use the function `sample_n` to select the random child. You should end up with a `heights` dataset with two columns: `father` and `daughter`.


```{r}
library(HistData)
names(GaltonFamilies)
set.seed(2007)
heights <- GaltonFamilies |> ## your code here

```

2. Estimate the intercept and slope of the regression line for predicting daughter height $Y$ using father height $X$. Use the following regression line formula:

$$
\frac{\hat{Y} - \mu_Y}{\sigma_Y} = \rho \frac{x - \mu_x}{\sigma_x} 
$$

```{r}
## your code here
```

3. Make a plot to confirm the regression line goes through the data.

```{r}
heights |> ggplot(aes(father, daughter)) + ## your code here
```

4. Recompute the slope and intercept coefficients, this time using `lm` and confirm you get the same answer as with the formula used in problem 2.

```{r}
## your code here
```

5. Note that the interpretation of the intercept is: the height prediction for the daughter whose father is 0 inches tall. This is not a very useful interpretation. Re-run the regression but instead of father height use inches above average for each father: instead of using the $x_i$s use $x_i - \bar{x}$. What is the interpretation of the intercept now? Does the slope estimate change?

```{r}
##your code here
```

6. When using the centered father heights as a predictor, is the intercept the same as the average daughter height? Check if this is the case with the values you computed and then show that mathematically this has to be the case.

```{r}
##your code here
```

For the next exercises install the **excessmort** package. For the latest version use

```{r}
#| eval: false
library(devtools)
install_github("rafalab/excessmort")
```


7. Define an object `counts` by wrangling `puerto_rico_counts` to 1) include data only from 2002-2017 and counts for people 60 or over. We will focus in this older subset throughout the rest of the problem set.

```{r}
library(excessmort) 
counts <- puerto_rico_counts |> 
  filter(between(year(date), 2002, 2017) &
           agegroup %in% c("60-64", "65-69", "70-74", "75-80", "80-84", "85-Inf"))
```



8. Use R to determine what day of the week María made landfall in PR (September 20, 2017).

```{r}
maria <- make_date(2017, 9, 20)
wday(maria, label = TRUE)
```


10. Redefine the date column to be the start of the week that date is part of: in other words, round the date down to the nearest week. Use the day of the week María made landfall as the first day. So, for example, 2017-09-20, 2017-09-21, 2017-09-22 should all be rounded down to 2017-09-20, while 2017-09-19 should be rounded down to 2017-09-13. Save the resulting table in `weekly_counts`.


```{r}
weekly_counts <- counts |> 
  mutate(date = floor_date(date, week_start = 3, unit = "week"))
```

11. Now collapse the `weekly_count` data frame to store only one mortality value for each week, for each `sex` and `agegroup`. To this by by redefining `outcome` to have the total deaths that week for each `sex` and `agegroup`. Remove weeks that have less the 7 days of data. Finally, add a column with the MMWR week. Name the resulting data frame `weekly_counts`. 

```{r}
weekly_counts <- weekly_counts |> 
  group_by(date, sex, agegroup) |>
  summarize(outcome = sum(outcome), population = mean(population), 
            n = n(), .groups = "drop") |>
  filter(n == 7) |> 
  select(-n) |>
  mutate(week = epiweek(date))
```


12. Comparing mortality totals is often unfair because the two groups begin compared have different population sizes. It is particularly important we consider rates rather than totals in this dataset because the demographics in Puerto Rico changed dramatically in the last 20 years. To see this use `puerto_rico_counts` to plot the population sizes by age group and gender. Provide a two sentence description of what you see.

```{r}
puerto_rico_counts |> ## your code here
```



13. Make a boxplot for each MMWR week's mortality rate based on the 2002-2016 data. Each week has 15 data points, one for each year. Then add the 2017 data as red points. 


```{r}
###your code here
```


14. Note twp things: 1) there is a strong week effect and 2) 2017 is lower than expected. Plot the yearly rates (per 1,000)  for 2002-2016:

```{r}
weekly_counts |> 
  filter(year(date) < 2017) |>
 ## your code here
```

15. The plot made in 14 explains why 2017 is below what is expected: there appears to be a general decrease in mortality with time. A possible explanation is that medical care is improving and people are living more healthy lives.

Fit a linear model to the weekly data for the 65 and older to the 2002-2016 data that accounts for: 

* A changing population.
* The trend observed in 12.
* The week effect.
* Age effect.
* A sex effect.

Use rate as the outcome in the model.

```{r}
dat <- weekly_counts |> 
  mutate(rate = outcome/population, sex = as.factor(sex), 
         day = difftime(date, min(date), units = "week"),
         week = as.factor(week))

fit <- dat |> filter(year(date) < 2017) |>
  lm(rate ~ sex + agegroup + day + week, data = _)


```


16. Now obtain expected counts for the entire dataset, including 2017. Compute the difference between the observed count and expected count and plot the total excess death for each week. Construct a confidence interval for the excess mortality estimate for each week. Hint: use the `predict` function.

```{r}
f <- predict(fit, newdata = dat, se.fit = TRUE)
dat |> mutate(exp = f$fit*population, 
                     se = f$se.fit*population,
                     sigma = sd(fit$resid)*population) |>
  mutate(excess = outcome - exp) |>
  group_by(date) |>
  summarize(excess = sum(excess),
            se = sqrt(sum(sigma^2 + se^2)), .groups = "drop") |>
  filter(year(date) >= 2002) |>
  ggplot(aes(date, excess)) +
  geom_point() +
  geom_hline(yintercept = 0, lty = 2, color = "grey") +
  geom_errorbar(aes(ymin = excess - 1.96*se, ymax = excess + 1.96*se))

tmp |> filter(agegroup == "80-84" & sex == "female") |> ggplot(aes(date, outcome)) + geom_point() +
  geom_line(aes(y=f_hat*population), col = 2)

```
  
17. Finally, plot the observed rates and predicted rates from the model for each `agegroup` and `sex`. Comment on how well the model fits and what you might do differently.

```{r}
##your code here
```

